#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 12 14:45:07 2017

Creating GUI

@author: pvkh
"""

import cv2
import sys
from PyQt4 import QtGui

class WebcamGui(QtGui.QWidget): # création de la classe héritant de QWidget
    """ Cette classe gère l'interface graphique principale qui affiche l'entrée
    d'une webcam et analyse les composantes RGB ainsi que la luminosité et la
    température. Elle contient des fonctions utilisant la bibliothèque OpenCV.
    """
    
    def __init__(self):
        
        # __init__ du parent
        super(WebcamGui, self).__init__()
        
        self.initWindow()
        
    def initWindow(self):
        
        ## Création de la fenêtre
        # Layout en grille
        grid_layout = QtGui.QGridLayout()
        # Espace entre les widgets
        grid_layout.setSpacing(10)
        
        # Création des boutons
        button_on = QtGui.QPushButton('On', self)
        button_off = QtGui.QPushButton('Off', self)
        button_save = QtGui.QPushButton('Save as picture', self)
        button_play_pause = QtGui.QPushButton('Play/Pause', self)
        
        # Ajout des boutons
        grid_layout.addWidget(button_on, 1, 0, 1, 2)
        grid_layout.addWidget(button_off, 2, 0, 1, 2)
        grid_layout.addWidget(button_save, 3, 0, 1, 1)
        grid_layout.addWidget(button_play_pause, 4, 0, 1, 1)
        
        # Ajout du layout sur la fenêtre principale
        self.setLayout(grid_layout)
        
        # Paramètre et affichage de l'interface à l'écran
        self.setGeometry(300, 300, 800, 600) # x, y, W, H; move+resize method
        self.setWindowTitle("Webcam Analyzer") # Titre de la fenêtre  
        
        # Fonctions connectées aux boutons
        button_on.clicked.connect(self.openWebcam)
        button_off.clicked.connect(self.closeWebcam)
        
        self.show()
        
    def openWebcam(self):
        """ Open webcam through OpenCV.
        """
        self.webcam = cv2.VideoCapture(0)
        print "Webcam ON" # init VideoCapture object (on/off)

    def closeWebcam(self):
        """ Close webcam throught OpenCV.
        """
        try:
            if self.webcam.isOpened():
                self.webcam.release()
                self.webcam = cv2.VideoCapture(0)
                print "Webcam OFF"
            else:
                self.webcam = cv2.VideoCapture(0)
        except NameError:
            print "Webcam already closed"
            

gui = WebcamGui()
    
    